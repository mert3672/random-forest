# -*- coding: utf-8 -*-
"""Untitled64.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sBvG7GQpVw1sM7qVMfR__0xN4Cl31JtE
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split,GridSearchCV,cross_val_score
from sklearn.metrics import mean_squared_error,r2_score
import matplotlib.pyplot as plt
from sklearn.preprocessing import scale
from sklearn.neighbors import KNeighborsRegressor

data = pd.read_csv("Credit.csv")
df = data.copy()
df = df.iloc[:,1:12]
df = df.dropna()
dummy = pd.get_dummies(df[['Gender','Student','Married','Ethnicity']])
y = df["Balance"]
a = df.drop(['Balance','Gender','Student','Married','Ethnicity'], axis=1).astype('float64')
x= pd.concat([a,dummy[['Gender_Female','Student_No','Married_Yes','Ethnicity_Asian']]],axis=1)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state= 0)

knn = KNeighborsRegressor().fit(x_train,y_train)

knn.n_neighbors

knn.effective_metric_

prediction = knn.predict(x_test)

np.sqrt(mean_squared_error(y_test, prediction))

pred = knn.predict(x_train)
np.sqrt(mean_squared_error(y_train, pred))

RMSE = []

for k in range(20):
  k += 1
  knn = KNeighborsRegressor(n_neighbors=k).fit(x_train, y_train)
  prediction = knn.predict(x_train)
  rmse = np.sqrt(mean_squared_error(y_train,prediction))
  RMSE.append(rmse)
  print("k =", k, "rmse değeri: ", rmse)

knn_parameters = {"n_neighbors": np.arange(1,30,1)}

knn_cv = KNeighborsRegressor()

knn_cv_model = GridSearchCV(knn_cv, knn_parameters, cv=10)

knn_cv_model.fit(x_train, y_train)

knn_cv_model.best_params_['n_neighbors']

RMSE = []
RMSE_CV = []
for k in range(20):
  k += 1
  knn = KNeighborsRegressor(n_neighbors=k).fit(x_train, y_train)
  prediction = knn.predict(x_train)
  rmse = np.sqrt(mean_squared_error(y_train,prediction))
  rmse_cv = np.sqrt(-1*cross_val_score(knn, x_train, y_train, cv=10, scoring="neg_mean_squared_error").mean())
  RMSE.append(rmse)
  RMSE_CV.append(rmse_cv)
  print("k =", k, "rmse değeri: ", rmse, "RMSE_CV: ", rmse_cv)